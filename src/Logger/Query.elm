-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Logger.Query exposing (GetUserRequiredArguments, LogsForUserRequiredArguments, getUser, listEvents, listLogs, listUsers, logsForUser)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import Logger.InputObject
import Logger.Interface
import Logger.Object
import Logger.Scalar
import Logger.ScalarCodecs
import Logger.Union


type alias GetUserRequiredArguments =
    { id : Int }


getUser : GetUserRequiredArguments -> SelectionSet decodesTo Logger.Object.User -> SelectionSet (List decodesTo) RootQuery
getUser requiredArgs object_ =
    Object.selectionForCompositeField "getUser" [ Argument.required "id" requiredArgs.id Encode.int ] object_ (identity >> Decode.list)


listEvents : SelectionSet decodesTo Logger.Object.Event -> SelectionSet (List decodesTo) RootQuery
listEvents object_ =
    Object.selectionForCompositeField "listEvents" [] object_ (identity >> Decode.list)


listLogs : SelectionSet decodesTo Logger.Object.Log -> SelectionSet (List decodesTo) RootQuery
listLogs object_ =
    Object.selectionForCompositeField "listLogs" [] object_ (identity >> Decode.list)


listUsers : SelectionSet decodesTo Logger.Object.User -> SelectionSet (List decodesTo) RootQuery
listUsers object_ =
    Object.selectionForCompositeField "listUsers" [] object_ (identity >> Decode.list)


type alias LogsForUserRequiredArguments =
    { userId : Int }


logsForUser : LogsForUserRequiredArguments -> SelectionSet decodesTo Logger.Object.Log -> SelectionSet (List decodesTo) RootQuery
logsForUser requiredArgs object_ =
    Object.selectionForCompositeField "logsForUser" [ Argument.required "userId" requiredArgs.userId Encode.int ] object_ (identity >> Decode.list)
