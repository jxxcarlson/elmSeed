-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Logger.Mutation exposing (CreateEventRequiredArguments, CreateLogRequiredArguments, createEvent, createLog)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import Logger.Enum.LogTypeValue
import Logger.InputObject
import Logger.Interface
import Logger.Object
import Logger.Scalar
import Logger.ScalarCodecs
import Logger.Union


type alias CreateEventRequiredArguments =
    { logId : Int
    , value : String
    }


createEvent : CreateEventRequiredArguments -> SelectionSet decodesTo Logger.Object.Event -> SelectionSet (Maybe decodesTo) RootMutation
createEvent requiredArgs object_ =
    Object.selectionForCompositeField "createEvent" [ Argument.required "logId" requiredArgs.logId Encode.int, Argument.required "value" requiredArgs.value Encode.string ] object_ (identity >> Decode.nullable)


type alias CreateLogRequiredArguments =
    { logType : Logger.Enum.LogTypeValue.LogTypeValue
    , name : String
    , userId : Int
    }


createLog : CreateLogRequiredArguments -> SelectionSet decodesTo Logger.Object.Log -> SelectionSet (Maybe decodesTo) RootMutation
createLog requiredArgs object_ =
    Object.selectionForCompositeField "createLog" [ Argument.required "logType" requiredArgs.logType (Encode.enum Logger.Enum.LogTypeValue.toString), Argument.required "name" requiredArgs.name Encode.string, Argument.required "userId" requiredArgs.userId Encode.int ] object_ (identity >> Decode.nullable)
